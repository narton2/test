{"version":3,"sources":["index.js"],"names":["Children","props","name","onClick","this","value","wartosc","type","React","Component","allUsers","UserList","users","length","map","user","key","App","state","filteredUsers","e","text","currentTarget","getFilteredUsersForText","setState","filter","toLowerCase","includes","onInput","filterUsers","Parents","i","Number","target","handleClick","placeholder","inputValue","ReactDOM","render","document","getElementById"],"mappings":"iOA8NMA,G,kBACJ,WAAYC,GAAQ,qEACZA,I,sEAIN,OACE,6BACE,4BAAQC,KAAK,KAAKC,QAASC,KAAKH,MAAME,SAAtC,QACA,2BAAOE,MAAOD,KAAKH,MAAMK,QAASC,KAAK,SACvC,4BAAQL,KAAK,IAAIC,QAASC,KAAKH,MAAME,SAArC,U,GAVeK,IAAMC,YAiBvBC,EAAW,CAAC,SAAU,QAAS,QAAS,QAAS,QAAS,QAE1DC,EAAW,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACjB,OAAIA,EAAMC,OAAS,EAEf,4BACGD,EAAME,KAAI,SAAAC,GAAI,OAAI,wBAAIC,IAAKD,GAAOA,OAKvC,2CAIEE,E,YACJ,aAAe,IAAD,8BACZ,+CAEKC,MAAQ,CACXC,cAAeT,GAJL,E,yEAQFU,GACV,IAAMC,EAAOD,EAAEE,cAAcjB,MACvBc,EAAgBf,KAAKmB,wBAAwBF,GACnDjB,KAAKoB,SAAS,CACZL,oB,8CAIoBE,GACtB,OAAOX,EAASe,QAAO,SAAAV,GAAI,OAAIA,EAAKW,cAAcC,SAASN,EAAKK,oB,+BAGxD,IAAD,OACP,OACE,6BACE,2BAAOE,QAAS,SAACR,GAAD,OAAO,EAAKS,YAAYT,MACxC,kBAACT,EAAD,CAAUC,MAAOR,KAAKc,MAAMC,qB,GAzBlBX,IAAMC,WA+BlBqB,E,YACJ,WAAY7B,GAAQ,IAAD,8BACjB,4CAAMA,KACDiB,MAAQ,CACXb,MAAO,GAHQ,E,yEAQP0B,GACV3B,KAAKoB,SAAS,CACZnB,MAAOD,KAAKc,MAAMb,MAAM2B,OAAOD,EAAEE,OAAO/B,U,iCAIjCkB,GACThB,KAAKoB,SAAS,CACZnB,MAAO2B,OAAOZ,EAAEa,OAAO5B,W,+BAIjB,IAAD,OACP,OACE,6BACA,kBAACL,EAAD,CAAUM,QAASF,KAAKc,MAAMb,MAAOF,QAAS,SAAC4B,GAAD,OAAO,EAAKG,YAAYH,MACtE,2BAAOI,YAAY,qBAAsBP,QAAS,SAACR,GAAD,OAAO,EAAKgB,WAAWhB,MACzE,kBAACH,EAAD,W,GA1BgBT,IAAMC,WAgC5B4B,IAASC,OAAO,kBAACR,EAAD,MAAaS,SAASC,eAAe,W","file":"static/js/main.18d94af2.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\n// function Square(props) {\r\n//   return (\r\n//     <button className=\"square\" onClick={props.onClick}>\r\n//       {props.value}\r\n//     </button>\r\n//   );\r\n// }\r\n\r\n// class Board extends React.Component {\r\n//   renderSquare(i) {\r\n//     return (\r\n//       <Square\r\n//         value={this.props.squares[i]}\r\n//         onClick={() => this.props.onClick(i)}\r\n//       />\r\n//     );\r\n//   }\r\n\r\n//   render() {\r\n//     return (\r\n//       <div>\r\n//         <div className=\"board-row\">\r\n//           {this.renderSquare(0)}\r\n//           {this.renderSquare(1)}\r\n//           {this.renderSquare(2)}\r\n//         </div>\r\n//         <div className=\"board-row\">\r\n//           {this.renderSquare(3)}\r\n//           {this.renderSquare(4)}\r\n//           {this.renderSquare(5)}\r\n//         </div>\r\n//         <div className=\"board-row\">\r\n//           {this.renderSquare(6)}\r\n//           {this.renderSquare(7)}\r\n//           {this.renderSquare(8)}\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// class Game extends React.Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = {\r\n//       history: [\r\n//         {\r\n//           squares: Array(9).fill(null)\r\n//         }\r\n//       ],\r\n//       stepNumber: 0,\r\n//       xIsNext: true,\r\n//       z : [],\r\n//     };\r\n//   }\r\n\r\n//   handleClick(i) {\r\n//     const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n//     const current = history[history.length - 1];\r\n//     const squares = current.squares.slice();\r\n//     if (calculateWinner(squares) || squares[i]) {\r\n//       return;\r\n//     }\r\n//     this.state.z.push(i);\r\n    \r\n//     squares[i] = this.state.xIsNext ? \"X\" : \"O\";\r\n//     this.setState({\r\n//       history: history.concat([\r\n//         {\r\n//           squares: squaresT\r\n//         }\r\n//       ]),\r\n//       stepNumber: history.length,\r\n//       xIsNext: !this.state.xIsNext,\r\n      \r\n//     });\r\n//   }\r\n\r\n//   jumpTo(step) {\r\n//     this.setState({\r\n//       stepNumber: step,\r\n//       xIsNext: (step % 2) === 0\r\n//     });\r\n//   }\r\n\r\n//   render() {\r\n//     const history = this.state.history;\r\n//     const current = history[this.state.stepNumber];\r\n//     const winner = calculateWinner(current.squares);\r\n//     // console.log(this.state.index);\r\n//     const moves = history.map((step, move) => {\r\n//       const desc = move ?\r\n//         'Go to move #' + move +'|| kolumna' +(Math.floor((this.state.z[move-1])/3)+1)+' || rzad' + (this.state.z[move-1]-(3*Math.floor((this.state.z[move-1])/3))+1):\r\n//         'Go to game start';\r\n//         console.log(move,this.state.z.length);\r\n//         if (move === this.state.z.length) { \r\n//           return (\r\n//           <li key={move}>\r\n//             <button onClick={() => this.jumpTo(move)}><b>{desc}</b></button>\r\n//           </li>\r\n//           );\r\n//         } else {\r\n//           return (\r\n//           <li key={move}>\r\n//             <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n//           </li>\r\n//           );\r\n//          };\r\n//     });\r\n\r\n//     let status;\r\n//     if (winner) {\r\n//       status = \"Winner: \" + winner;\r\n//     } else {\r\n//       status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\r\n//     }\r\n\r\n//     return (\r\n//       <div className=\"game\">\r\n//         <div className=\"game-board\">\r\n//           <Board\r\n//             squares={current.squares}\r\n//             onClick={i => this.handleClick(i)}\r\n//           />\r\n//         </div>\r\n//         <div className=\"game-info\">\r\n//           <div>{status}</div>\r\n//           <ol>{moves}</ol>\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// // ========================================\r\n\r\n// ReactDOM.render(<Game />, document.getElementById(\"root\"));\r\n\r\n// function calculateWinner(squares) {\r\n//   const lines = [\r\n//     [0, 1, 2],\r\n//     [3, 4, 5],\r\n//     [6, 7, 8],\r\n//     [0, 3, 6],\r\n//     [1, 4, 7],\r\n//     [2, 5, 8],\r\n//     [0, 4, 8],\r\n//     [2, 4, 6]\r\n//   ];\r\n//   for (let i = 0; i < lines.length; i++) {\r\n//     const [a, b, c] = lines[i];\r\n//     if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n//       return squares[a];\r\n//     }\r\n//   }\r\n//   return null;\r\n// }\r\n\r\n\r\n// class App extends React.Component {\r\n//   constructor(props){\r\n//     super(props);\r\n//     this.state = {\r\n//       counter: 0,\r\n//       double: 0,\r\n//       name: \"\",\r\n//       surname: \"\",\r\n//     }\r\n//     this.increment = this.increment.bind(this);\r\n//     this.incrementMinus = this.incrementMinus.bind(this);\r\n//     this.double = this.double.bind(this);\r\n//     this.handleChange = this.handleChange.bind(this);\r\n    \r\n//   }\r\n\r\n//   increment() {\r\n//     this.setState({\r\n//       counter: this.state.counter +1,\r\n//     })\r\n//   }\r\n\r\n//   incrementMinus() {\r\n//     this.setState({\r\n//       counter: this.state.counter -1,\r\n//     })\r\n//   }\r\n\r\n//   double() {\r\n//     this.setState({\r\n//       double: this.state.double +1,\r\n//     }, () => console.log(this.state.double));\r\n//   }\r\n\r\n//   handleChange(event) {\r\n//     this.setState({\r\n//       [event.target.placeholder]: event.target.value\r\n//     })\r\n//   }\r\n\r\n//   render() {\r\n//     return (\r\n//       <div>\r\n//         <button onClick={this.increment}>+</button>\r\n//         <output>{this.state.counter}</output>\r\n//         <button onClick={this.incrementMinus}>-</button>\r\n//         <br></br>\r\n//         <button onDoubleClick={this.double}>+</button>\r\n//         <output>{this.state.double}</output>\r\n//         <br></br>\r\n//         <input placeholder=\"name\"  onInput={this.handleChange}></input>\r\n//         <input placeholder=\"surname\"  onInput={this.handleChange}></input>\r\n//         <output>{this.state.name} {this.state.surname}</output>\r\n//       </div>\r\n//     )\r\n//   }\r\n// }\r\n\r\n\r\nclass Children extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n        <button name=\"-1\" onClick={this.props.onClick}>-KUt</button>\r\n        <input value={this.props.wartosc} type=\"text\"/>\r\n        <button name=\"1\" onClick={this.props.onClick}>+</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst allUsers = ['Michal', 'Kasia', 'Jacek', 'Marta', 'Tomek', 'Ania'];\r\n\r\nconst UserList = ({users}) => {\r\n  if (users.length > 0) {\r\n    return (\r\n      <ul>\r\n        {users.map(user => <li key={user}>{user}</li>)}\r\n      </ul>\r\n    );\r\n  }\r\n  return (\r\n    <p>No results!</p>\r\n  )\r\n};\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      filteredUsers: allUsers,\r\n    };\r\n  }\r\n\r\n  filterUsers(e) {\r\n    const text = e.currentTarget.value;\r\n    const filteredUsers = this.getFilteredUsersForText(text);\r\n    this.setState({\r\n      filteredUsers,\r\n    });\r\n  }\r\n\r\n  getFilteredUsersForText(text) {\r\n    return allUsers.filter(user => user.toLowerCase().includes(text.toLowerCase()))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <input onInput={(e) => this.filterUsers(e)} />\r\n        <UserList users={this.state.filteredUsers} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass Parents extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: 5,\r\n    }\r\n    // this.handleClick = this.handleClick.bind(this);\r\n  }\r\n  \r\n  handleClick(i) {\r\n    this.setState({\r\n      value: this.state.value+Number(i.target.name),\r\n    })\r\n  }\r\n\r\n  inputValue(e) {\r\n    this.setState({\r\n      value: Number(e.target.value),\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n      <Children wartosc={this.state.value} onClick={(i) => this.handleClick(i)}/>\r\n      <input placeholder=\"wpisz nowa wartosc\"  onInput={(e) => this.inputValue(e)}/>\r\n      <App />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nReactDOM.render(<Parents />, document.getElementById(\"root\"));"],"sourceRoot":""}